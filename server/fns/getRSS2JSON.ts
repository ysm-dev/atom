import ms from 'ms'
import { getServerURL } from 'utils/getServerURL'
import { isServer } from 'utils/isServer'

type Params = {
  url: string
  xmlURL: string
}

export const getRSS2JSON = async (params: Params) => {
  const { xmlURL } = params

  const json = await fetch(
    isServer()
      ? `https://rss2json.deno.dev/${xmlURL}`
      : `${getServerURL()}/rss2json?xmlURL=${xmlURL}`,
    {
      signal: AbortSignal.timeout(ms(`5s`)),
    },
  ).then<R>((r) => r.json())

  return json.result.map(({ title, links }) => ({
    title: title.value,
    link: links[0].href,
  }))
}

// Generated by https://quicktype.io

export interface R {
  result: Result[]
}

export interface Result {
  id: string
  updated: string
  updatedRaw: string
  title: Content
  links: Link[]
  attachments: any[]
  content: Content
}

export interface Content {
  value: string
  type: Type
}

export enum Type {
  HTML = 'html',
}

export interface Link {
  href: string
}
