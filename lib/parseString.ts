import { getFeed } from 'hooks/useFeed'
import Parser from 'rss-parser'

const parser = new Parser({})

type Params = {
  xml: string
  url: string
  xmlURL: string
}

export const parseString = async ({ xml, url, xmlURL }: Params) => {
  return parser.parseString
    .bind(parser)(xml)
    .catch(async (e) => {
      console.log(`Failed to parse ${xmlURL} with rss-parser`)
      console.log(xmlURL, xml.slice(0, 100))
      console.log(e)

      const [json, { title }] = await Promise.all([
        fetch(`https://rss2json.deno.dev/${xmlURL}`).then<R>((r) => r.json()),
        getFeed(url),
      ])

      return {
        title,
        items: json.result.map(({ title, links }) => ({
          title,
          link: links[0].href,
        })),
      }
    })
}

// Generated by https://quicktype.io

export interface R {
  result: Result[]
}

export interface Result {
  'dc:creator': string[]
  'content:encoded': ContentEncoded
  id: string
  title: ContentEncoded
  description: ContentEncoded
  published: string
  publishedRaw: string
  updated: string
  updatedRaw: string
  author: Author
  links: Link[]
  attachments: Attachment[]
}

export interface Attachment {
  url: string
  mimeType: MIMEType
  sizeInBytes: number
}

export enum MIMEType {
  ImageJPEG = 'image/jpeg',
}

export interface Author {
  name: string
}

export interface ContentEncoded {
  value: string
}

export interface Link {
  href: string
}
